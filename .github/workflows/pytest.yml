name: Pytest
on:
  push:
    branches: ["main"]
  pull_request:
    branches: []

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
      - run: poetry install
      - run: poetry run pytest
      - run: poetry build
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        with:
          name: wheel
          path: ${{github.workspace}}/dist/*.whl

  test-no-poetry:
    needs: [test]
    strategy:
      matrix:
        python-version: ["3.6", "3.7"]
        os: [ubuntu-20.04, macos-13, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: wheel
          path: ${{github.workspace}}/dist
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install dist/*.whl pytest toml
        if: matrix.os != 'windows-latest'
      - run: pip install (Resolve-Path "dist\*.whl").Path pytest toml
        if: matrix.os == 'windows-latest'
      - run: pytest
